# -*- coding: utf-8 -*-
"""part2.ipynb

Automatically generated by Colaboratory.

Original file is located at
    https://colab.research.google.com/drive/1huRCT8FOro_W6wG7Bednt4eLgeHPAC91
"""


import numpy as np
import matplotlib.pyplot as plt
from sklearn.datasets import load_wine
from sklearn.preprocessing import StandardScaler
from sklearn.decomposition import PCA
import pandas as pd

#carga el conjunto wine
wine=load_wine()
data=wine.data
feature_names= wine.feature_names

# Paso1 Preprocesamiento de datos
scaler = StandardScaler() # estandarizar datos tengas media 0 desviacion estandar 0
data_scaled = scaler.fit_transform(data) # escalar o preprocesamiento de datos

# Paso2 calculos de los componentes principales
# debemos tener los datos estadarizado
pca= PCA()
pca.fit(data_scaled) # esto calcula los componentes principales la varianza explicada para componente



# explora la varianza por cada componete principal
explained_variance= pca.explained_variance_ratio_
cumulative_explained_variance= np.cumsum(explained_variance) # namp√Ω acumulativo de varianza

print(explained_variance.cumsum())

# Paso 3 selcciona el numero de componentes principales
# Grafico de varianza explicada acumulativa

plt.figure(figsize=(10,6))
plt.plot(range(1,len(cumulative_explained_variance)+1),cumulative_explained_variance,marker="o")
plt.xlabel("nuemro de componetes principales")
plt.ylabel("varianza explicasda acumulativa")
plt.title("varianza explicada aculumulativa")
plt.show()

#determiar el numero de componentes principales a retener
numero_decomponentes=6

# Paso 4 Prroyeccion de los datos en el nuevo espacio de caracateristicas
pca=PCA(n_components=numero_decomponentes)
data_pca=pca.fit_transform(data_scaled)

# Paso 5 Analisis e Interpretacion de componentes principales
#componentes principales
componentes=pca.components_

#visualiza la importancia de las caracteristicas en cada componente principal
plt.figure(figsize=(10,6))
plt.bar(range(len(componentes[0])),componentes[0])
plt.xticks(range(len(componentes[0])),feature_names,rotation=90)
plt.xlabel("caracteristicas")
plt.ylabel("importancia")
plt.title("la importancia de caracteristicas en el primer componente principal")
plt.show()